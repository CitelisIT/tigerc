#!/bin/sh

read -r -d '' USAGE <<EOM
Usage:
    tigerc <file> <task> [argument] [options...]

Tasks:
    --parse-tree            Generates a representation of the input program's parse tree
    --ast <out-path>        Generates a DOT representation of the input program's AST
    --check-syntax          Check the syntax of the input program
    --check-semantics       Check the semantics of the input program
    --symtab                Dump the input program's symbol table

Options:
    -h, --help              Show this message
    --color                 Turns on colored output (default=true)
    --no-color              Turns off colored output
    --log-level=<value>     Sets gradle's log level to the specified value of (quiet, warn, info, debug). Default: quiet
EOM

GRADLE_OPTS=("--console" "plain" "--init-script" "init.gradle")

COLOR=1
LOG_LEVEL="--quiet"

error() {
    MESSAGE=$1
    if [[ COLOR -eq 1 ]]; then
        echo -e "\x1b[1m\x1b[31m[ERROR]\x1b[0m $MESSAGE"
    else
        echo "[ERROR] $MESSAGE"
    fi
    exit 1
}

if [[ "$#" -lt 2 ]]; then
    echo "$USAGE"
    exit 0
else
    TARGET=$1
    TASK=$2
    shift
    shift
fi

if [[ "$TASK" == "--ast" ]]; then
    OUTFILE=$1
    shift
fi

# Parse optional options
while [[ "$#" -gt 0 ]]; do
    case $1 in
    -h | --help)
        echo "$USAGE"
        exit 0
        ;;
    --color) COLOR=1 ;;
    --no-color) COLOR=0 ;;
    --log-level=*) LOG_LEVEL="--${1#*=}" ;;
    --log-level) error "Option '--log-level' must have a value" ;;
    *) error "Unknown option '$1'" ;;
    esac
    shift
done

# Input file validation
if [[ ! -f $TARGET ]]; then
    error "The file $TARGET does not exist."
fi

# Log level validation
case $LOG_LEVEL in
--quiet | --warn | --info | --debug) ;;
*) error "Invalid log level ${LOG_LEVEL:2}" ;;
esac

case $TASK in
--parse-tree) ./gradlew "${GRADLE_OPTS[@]}" $LOG_LEVEL tree -PinFile=$TARGET -Pcolor=$COLOR ;;
--ast) ./gradlew "${GRADLE_OPTS[@]}" $LOG_LEVEL dot -PinFile=$TARGET -PoutFile=$OUTFILE -Pcolor=$COLOR ;;
--check-syntax) ./gradlew "${GRADLE_OPTS[@]}" $LOG_LEVEL syntax -PinFile=$TARGET -Pcolor=$COLOR ;;
--check-semantics) ./gradlew "${GRADLE_OPTS[@]}" $LOG_LEVEL semantics -PinFile=$TARGET -Pcolor=$COLOR ;;
--symtab) ./gradlew "${GRADLE_OPTS[@]}" $LOG_LEVEL symtab -PinFile=$TARGET -Pcolor=$COLOR ;;
*) error "Invalid task $TASK" ;;
esac
